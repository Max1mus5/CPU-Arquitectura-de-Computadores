$date
	Thu Aug 22 15:21:29 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module testbench $end
$var wire 32 ! readData2 [31:0] $end
$var wire 32 " readData1 [31:0] $end
$var reg 1 # clk $end
$var reg 5 $ readReg1 [4:0] $end
$var reg 5 % readReg2 [4:0] $end
$var reg 1 & regWrite $end
$var reg 1 ' reset $end
$var reg 32 ( writeData [31:0] $end
$var reg 5 ) writeReg [4:0] $end
$scope module uut $end
$var wire 1 # clk $end
$var wire 32 * readData1 [31:0] $end
$var wire 32 + readData2 [31:0] $end
$var wire 5 , readReg1 [4:0] $end
$var wire 5 - readReg2 [4:0] $end
$var wire 1 & regWrite $end
$var wire 1 ' reset $end
$var wire 32 . writeData [31:0] $end
$var wire 5 / writeReg [4:0] $end
$var integer 32 0 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b100000 0
b0 /
b0 .
b0 -
b0 ,
b0 +
b0 *
b0 )
b0 (
1'
0&
b0 %
b0 $
0#
b0 "
b0 !
$end
#5
b100000 0
1#
#10
0#
1&
b11011110101011011011111011101111 (
b11011110101011011011111011101111 .
b1 )
b1 /
0'
#15
1#
#20
0#
b10 %
b10 -
b11011110101011011011111011101111 "
b11011110101011011011111011101111 *
b1 $
b1 ,
0&
#25
1#
#30
0#
1&
b11001010111111101011101010111110 (
b11001010111111101011101010111110 .
b10 )
b10 /
#35
b11001010111111101011101010111110 !
b11001010111111101011101010111110 +
1#
#40
0#
0&
#45
1#
#50
